CITY ::= city NAME { BLOCKS }
NAME ::= "[\w\s]+"
BLOCKS ::= BLOCK BLOCKS_TAIL
BLOCKS_TAIL ::= BLOCK BLOCKS_TAIL | ε
BLOCK ::= ROAD | BUILDING | STADIUM | ARENA
ROAD ::= road NAME { COMMANDS };
BUILDING ::= building NAME { COMMANDS };
STADIUM ::= stadium NAME METADATA { COMMANDS };
ARENA ::= arena NAME METADATA { COMMANDS };
METADATA ::= TITLE CAPACITY | ε
TITLE ::= NAME | ε
CAPACITY ::= ADDITIVE | ε
COMMANDS ::= COMMAND COMMANDS_TAIL
COMMANDS_TAIL ::= COMMAND COMMANDS_TAIL | ε
COMMAND ::= FOR | IF | ASSIGMENT
| line (POINT, POINT)
| bend (POINT, POINT, ADDITIVE)
| box (POINT, POINT)
| circle (POINT, POINT)
| rect (POINT, POINT, POINT, POINT)
POINT ::= (ADDITIVE, ADDITIVE)
FOR ::= for ( var VARIABLE = ADDITIVE, ADDITIVE ) { COMMANDS }
IF ::= if ( CONDITION ) { COMMANDS } ELSE
ELSE ::= else { COMMANDS } | ϵ
CONDITION ::= ADDITIVE CONDITION_TAIL
CONDITION_TAIL ::= COMP_OP REAL | ϵ
COMP_OP ::= == | != | LESS_THAN | MORE_THAN
LESS_THAN ::= < EQUALS
MORE_THAN ::= > EQUALS
EQUALS::= = | ϵ
ASSIGMENT ::= var VARIABLE = ADDITIVE;
VARIABLE ::= [\w]+[\w\d]*
ADDITIVE ::= MULTIPLICATIVE ADDITIVE_TAIL
ADDITIVE_TAIL ::= + MULTIPLICATIVE ADDITIVE_TAIL | - MULTIPLICATIVE ADDITIVE_TAIL | ϵ
MULTIPLICATIVE ::= EXPONENTIAL MULTIPLICATIVE_TAIL
MULTIPLICATIVE_TAIL ::= * EXPONENTIAL MULTIPLICATIVE_TAIL
| / EXPONENTIAL MULTIPLICATIVE_TAIL
| // EXPONENTIAL MULTIPLICATIVE_TAIL
| ϵ
EXPONENTIAL ::= UNARY EXPONENTIAL_TAIL
EXPONENTIAL_TAIL ::= ^ UNARY EXPONENTIAL_TAIL | ϵ
UNARY ::= + PRIMARY | - PRIMARY | PRIMARY
PRIMARY ::= REAL | VARIABLE | ( ADDITIVE )
REAL ::= \d+(\.\d+)?